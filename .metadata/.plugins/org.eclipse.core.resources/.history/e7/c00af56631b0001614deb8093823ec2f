package classes;

import java.util.ArrayList;
import java.util.Queue;
import server.MainServer;

public class Channel extends Thread {

//    public String channelId;
//  public String[] channelTags;
//  public int numChannelSubscribers;
//  public int numChannelLikes;
//  public boolean isLive;
	
    public String clientId;
    public String channelName;
    public ArrayList<Song> songQueue;
    public boolean isLive;

    public String currentSongURI;
    public long startTime; // SYSTEM milliseconds
    public long currentTime; // ms, percent of duration
    public long duration; // ms, duration given by spotify

    public Channel(String clientId, String channelName){
    	this.clientId = clientId;
        this.channelName = channelName;
        this.songPlaylist = new ArrayList<Song>();
        startTime = 0;
        isLive = false;
    }

    @Override
    public void run() {
    	while (true) {
    		if (isLive) {
    			currentTime = System.currentTimeMillis() - startTime;
    			if (currentTime > duration) {
    				startNextSong();
    			}
    		}
    	}
    }
    
    public void startNextSong() {
    	if (isLive) {
    		Song nextSong = songQueue.get(0);
    		songQueue.remove(0);
    		currentSongURI = nextSong.getSongURI();
    		duration = nextSong.getDuration();
    	}
    }
    
    
    
    public void addSongToPlaylist(Song song){
        songPlaylist.add(song);
    }

    public ArrayList<String> getSongURIPlaylist(){
        ArrayList<String> arrSongURI = new ArrayList<String>();
        System.out.println(songPlaylist.size());
        for(int i = 0; i <songPlaylist.size(); i++){

            arrSongURI.add(songPlaylist.get(i).getSongURI());
        }
        return arrSongURI;
    }

    public void setSongURIPlaylist(ArrayList<Song> songs){
       this.songPlaylist = songs;
    }

    public String getChannelName() {
        return channelName;
    }

    public void setChannelName(String channelName) {
        this.channelName = channelName;
    }

    public String getCurrentSongURI() {
        return songPlaylist.get(0).getSongURI();
    }

    public void setCurrentSongURI(String currentSong) {
        this.currentSongURI = currentSong;
    }

    public void changeSong() {
        songPlaylist.remove(0);
        if(!songPlaylist.isEmpty()) {
            startTime = System.nanoTime();
            totalTimePlayed = 0;
        }
    }

    public void playSong() {
        startTime = System.nanoTime();
    }

    public void pauseSong() {
        endTime = System.nanoTime();
        totalTimePlayed += endTime - startTime;
    }

    public Integer getCurrentSongPosition() {
        // TODO Auto-generated method stub
        endTime = System.nanoTime();
        totalTimePlayed += (endTime - startTime);
        return 0;
    }

    public void setCurrentSongPosition(Integer i){
        this.currentSongPosition = i;
    }
}
